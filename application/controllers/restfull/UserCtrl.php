<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class UserCtrl extends \REST_Controller {

	function __construct()
    {
        parent::__construct();
        $this->methods['data_get']['limit'] = 500; // 500 requests per hour per user/key
        $this->methods['data_post']['limit'] = 100; // 100 requests per hour per user/key
        $this->methods['data_delete']['limit'] = 50; // 50 requests per hour per user/key
    }

    public function data_get()
    {
        $users = [['id' => 1, 'name' => 'Agus', 'age' => 24, 'address' => 'Sidokumpul'], ['id' => 2, 'name' => 'Agus', 'age' => 24, 'address' => 'Sidokumpul']];
        $id = $this->get('id');
        if ($id === NULL) {
            if ($users) {
                $this->response($users, REST_Controller::HTTP_OK);
            } else {
                $this->response([
                    'status' => FALSE,
                    'message' => 'No users were found'
                ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
            }
        } else {
            $id = (int) $id;
            if ($id <= 0) {
                $this->response(NULL, REST_Controller::HTTP_BAD_REQUEST); // BAD_REQUEST (400) being the HTTP response code
            }
            $user = NULL;
            if (!empty($users)) {
                foreach ($users as $key => $value) {
                    if (isset($value['id']) && $value['id'] === $id)
                    {
                        $user = $value;
                    }
                }
            }
            if (!empty($user)) {
                $this->set_response($user, REST_Controller::HTTP_OK); // OK (200) being the HTTP response code
            } else {
                $this->set_response([
                    'status' => FALSE,
                    'message' => 'User could not be found'
                ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
            }
        }
    }

    public function data_post()
    {
        $message = [
            'id' => 100, // Automatically generated by the model
            'name' => $this->post('name'),
            'email' => $this->post('email'),
            'message' => 'Added a resource'
        ];
        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    }

    public function data_delete()
    {
        $id = (int) $this->get('id');
        if ($id <= 0) {
            $this->response(NULL, REST_Controller::HTTP_BAD_REQUEST); // BAD_REQUEST (400) being the HTTP response code
        }
        $message = [
            'id' => $id,
            'message' => 'Deleted the resource'
        ];
        $this->set_response($message, REST_Controller::HTTP_NO_CONTENT); // NO_CONTENT (204) being the HTTP response code
    }
}
